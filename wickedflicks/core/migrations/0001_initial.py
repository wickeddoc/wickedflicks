# Generated by Django 3.1.5 on 2021-01-14 11:20

from django.db import migrations, models
import django.db.models.deletion
import multiselectfield.db.fields
import versatileimagefield.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('label', models.CharField(max_length=64, unique=True)),
            ],
            options={
                'verbose_name': 'Category',
                'verbose_name_plural': 'Categories',
                'ordering': ['label'],
            },
        ),
        migrations.CreateModel(
            name='Genre',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('label', models.CharField(max_length=64, unique=True)),
            ],
            options={
                'ordering': ['label'],
            },
        ),
        migrations.CreateModel(
            name='Movie',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('active', models.BooleanField(default=True)),
                ('title', models.CharField(max_length=256)),
                ('country', models.CharField(blank=True, max_length=64, null=True)),
                ('production_year', models.PositiveSmallIntegerField(blank=True, null=True, verbose_name='Production Year')),
                ('duration', models.PositiveSmallIntegerField(blank=True, editable=False, help_text='in minutes', null=True)),
                ('imdb_id', models.CharField(max_length=16, verbose_name='IMDb ID')),
                ('languages', multiselectfield.db.fields.MultiSelectField(blank=True, choices=[('vo', 'Original'), ('en', 'English'), ('uk', 'Ukrainian'), ('de', 'German'), ('fr', 'French'), ('it', 'Italian'), ('no', 'Norwegian'), ('se', 'Swedish'), ('da', 'Danish'), ('es', 'Spanish'), ('ro', 'Romanian'), ('fi', 'Finnish'), ('ru', 'Russian'), ('ko', 'Korean'), ('ta', 'Tamil'), ('th', 'Thai'), ('lb', 'Luxembourgish'), ('nl', 'Dutch'), ('sw', 'Swahili'), ('ch', 'Chamoru'), ('jp', 'Japanese'), ('zh', 'Chinese'), ('ar', 'Arabic'), ('ar', 'Arabic')], default='', max_length=71)),
                ('subtitles', multiselectfield.db.fields.MultiSelectField(blank=True, choices=[('vo', 'Original'), ('en', 'English'), ('uk', 'Ukrainian'), ('de', 'German'), ('fr', 'French'), ('it', 'Italian'), ('no', 'Norwegian'), ('se', 'Swedish'), ('da', 'Danish'), ('es', 'Spanish'), ('ro', 'Romanian'), ('fi', 'Finnish'), ('ru', 'Russian'), ('ko', 'Korean'), ('ta', 'Tamil'), ('th', 'Thai'), ('lb', 'Luxembourgish'), ('nl', 'Dutch'), ('sw', 'Swahili'), ('ch', 'Chamoru'), ('jp', 'Japanese'), ('zh', 'Chinese'), ('ar', 'Arabic'), ('ar', 'Arabic')], default='', max_length=71)),
                ('release_date', models.DateField(blank=True, null=True, verbose_name='Release Date')),
                ('rating', models.IntegerField(blank=True, null=True)),
                ('cover_url', models.URLField(blank=True, null=True, verbose_name='Cover URL')),
                ('cover_image', versatileimagefield.fields.VersatileImageField(blank=True, null=True, upload_to='', verbose_name='Cover Image')),
                ('backdrop_url', models.URLField(blank=True, null=True, verbose_name='Backdrop URL')),
                ('backdrop_image', versatileimagefield.fields.VersatileImageField(blank=True, null=True, upload_to='', verbose_name='Backdrop Image')),
                ('episode_number', models.PositiveSmallIntegerField(blank=True, null=True, verbose_name='Episode Number')),
                ('update_serial', models.CharField(blank=True, max_length=14, null=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('modified', models.DateTimeField(auto_now=True)),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='core.category')),
                ('genre', models.ManyToManyField(to='core.Genre')),
            ],
        ),
    ]
